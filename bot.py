from telegram.ext import Updater, MessageHandler, Filters, CommandHandler
from telegram import ReplyKeyboardMarkup
from bs4 import BeautifulSoup
import requests
import googletrans


def start(update, context):
    context.chat_data['activity'] = list()

    keyboard = [['–†–æ—Å—Å–∏—è', '–°–®–ê'], ['–ú–∏—Ä', '–¢–û–ü-10 —Å—Ç—Ä–∞–Ω'], ['–ù–æ–≤—ã–µ —Å–ª—É—á–∞–∏ –≤ –†–æ—Å—Å–∏–∏'], ['–°–∞–π—Ç –ø–æ –±–æ—Ä—å–±–µ —Å –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–æ–º']]
    markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True)

    update.message.reply_text('üåç–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª—é–±–æ–π —Å—Ç—Ä–∞–Ω—ã, —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É!\n\n'
                              'üéâ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∫–Ω–æ–ø–∫—É "–°–ª—É—á–∞–π–Ω–æ–µ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ", –µ—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ,'
                              '—á–µ–º —Å–µ–±—è –∑–∞–Ω—è—Ç—å\n\n', reply_markup=markup)


def message_hand(update, context):
    text = update.message.text.strip().lower()
    if text == '—Ç–æ–ø-10 —Å—Ç—Ä–∞–Ω':
        update.message.reply_text(get_top())
        return
    if text == '–Ω–æ–≤—ã–µ —Å–ª—É—á–∞–∏ –≤ —Ä–æ—Å—Å–∏–∏':
        update.message.reply_text(new_cases())
        return
    if text == '—Å–∞–π—Ç –ø–æ –±–æ—Ä—å–±–µ —Å –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–æ–º':
        update.message.reply_text('ü¶† —Å—Ç–æ–ø–∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å.—Ä—Ñ')
        return
    update.message.reply_text(country_handler(text))


def get_stats(country):
    if country == '–º–∏—Ä':
        url = 'https://www.worldometers.info/coronavirus/'
        style = 'font-size:13px; color:#999; margin-top:5px; text-align:center'
    else:
        url = f'https://www.worldometers.info/coronavirus/country/{country}'
        style = 'font-size:13px; color:#999; text-align:center'

    page = requests.get(url)

    soup = BeautifulSoup(page.text, 'html.parser')

    if '404 Not Found' in str(soup):
        return '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–µ'

    cases = soup.findAll('div', class_='maincounter-number')

    latest_update = soup.findAll('div', style=style)[0].text
    latest_update = ' '.join(translate(latest_update, lang='en-ru').split()[:-1]) + ' GMT'
    latest_update = latest_update.split(':')

    to_return = f'üü®–í—Å–µ–≥–æ –∑–∞–±–æ–ª–µ–ª–æ: {cases[0].text.strip()}\n\n' \
                f'üü•–£–º–µ—Ä–ª–æ: {cases[1].text.strip()}\n\n' \
                f'üü©–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {cases[2].text.strip()}\n\n' \
                f'{latest_update[0].capitalize()}:\n' \
                f'{latest_update[1]}:{latest_update[2]}'

    return to_return


def country_handler(country):
    # Countries for quick search statistic
    countries = {
        '–º–∏—Ä': '–º–∏—Ä',
        '—Å—à–∞': 'us',
        '–≤–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è': 'uk',
        '—Ä–æ—Å—Å–∏—è': 'russia',
        '–±–µ–ª–∞—Ä—É—Å—å': 'belarus',
        '—é–∂–Ω–∞—è –∫–æ—Ä–µ—è': 'south-korea',
        '–∏—Ç–∞–ª–∏—è': 'italy',
        '–∏—Å–ø–∞–Ω–∏—è': 'spain',
        '—á–µ—Ö–∏—è': 'czech-republic',
        '—É–∫—Ä–∞–∏–Ω–∞': 'ukraine',
        '–∫–∞–∑–∞—Ö—Å—Ç–∞–Ω': 'kazakhstan',
        '—Ç—É—Ä—Ü–∏—è': 'turkey',
        '–≥–µ—Ä–º–∞–Ω–∏—è': 'germany',
    }

    if country in countries.keys():
        stats = get_stats(countries[country])

        if country == '–º–∏—Ä':
            message = '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É\n\n'
        else:
            message = f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ {country.capitalize() if country != "—Å—à–∞" else country.upper()}\n\n'

        return message + stats

    country_url = translate(country)
    stats = get_stats(country_url)

    return f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ {country.capitalize()}\n\n' + stats


def translate(text, lang='ru-en'):
    translator = googletrans.Translator()

    source_lang = lang.split('-')[0]
    dest_lang = lang.split('-')[1]

    translated_text = translator.translate(text, src=source_lang, dest=dest_lang).text.lower()
    if len(translated_text.split()) < 5:
        translated_text = translated_text.split()
        translated_text = '-'.join(translated_text)

    return translated_text.strip()


def get_top():
    # List of countries
    page = requests.get('https://news.google.com/covid19/map?hl=ru&gl=RU&ceid=RU:ru')
    soup = BeautifulSoup(page.text, 'html.parser')
    top = soup.findAll('th', class_='l3HOY')

    result = ['‚Ä¢' + country.text for country in top[1:11]]

    return 'üò∑ –¢–û–ü-10 —Å—Ç—Ä–∞–Ω üò∑\n\n' + '\n'.join(result)


def new_cases():
    page = requests.get('https://www.worldometers.info/coronavirus/country/russia/')

    soup = BeautifulSoup(page.text, 'html.parser')

    cases = soup.findAll('li', class_='news_li')[0].text.split()

    new_cases_ = 'üò∑ –ù–æ–≤—ã—Ö —Å–ª—É—á–∞–µ–≤: ' + cases[0] + '\n'
    new_deaths = 'üíÄ –°–º–µ—Ä—Ç–µ–π: ' + cases[4] + '\n'

    return new_cases_ + new_deaths


def main():
    updater = Updater('', use_context=True)
    dispatcher = updater.dispatcher
    # handlers
    dispatcher.add_handler(CommandHandler('start', start))
    dispatcher.add_handler(MessageHandler(Filters.text, message_hand))

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
