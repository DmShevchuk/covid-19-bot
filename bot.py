from telegram.ext import Updater, MessageHandler, Filters, CommandHandler
from telegram import ReplyKeyboardMarkup
from bs4 import BeautifulSoup
from random import shuffle
import requests


def start(update, context):
    context.chat_data['activity'] = list()
    keyboard = [['–†–æ—Å—Å–∏—è', '–°–®–ê'], ['–ú–∏—Ä', '–¢–û–ü-10 —Å—Ç—Ä–∞–Ω'], ['–°–∞–π—Ç –ø–æ –±–æ—Ä—å–±–µ —Å –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–æ–º',
                                                             '–°–ª—É—á–∞–π–Ω–æ–µ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ'], ['–ù–æ–≤—ã–µ —Å–ª—É—á–∞–∏ –≤ –†–æ—Å—Å–∏–∏']]
    markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True)
    update.message.reply_text('üåç–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª—é–±–æ–π —Å—Ç—Ä–∞–Ω—ã, —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É!\n\n'
                              'üéâ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∫–Ω–æ–ø–∫—É "–°–ª—É—á–∞–π–Ω–æ–µ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ", –µ—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ,'
                              '—á–µ–º —Å–µ–±—è –∑–∞–Ω—è—Ç—å\n\n', reply_markup=markup)


def message_hand(update, context):
    text = update.message.text.strip().lower()
    if text == '—Å–ª—É—á–∞–π–Ω–æ–µ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ':
        update.message.reply_text(activity(context))
        return
    if text == '—Ç–æ–ø-10 —Å—Ç—Ä–∞–Ω':
        update.message.reply_text(get_top())
        return
    if text == '–Ω–æ–≤—ã–µ —Å–ª—É—á–∞–∏ –≤ —Ä–æ—Å—Å–∏–∏':
        update.message.reply_text(new_cases())
        return
    if text == '—Å–∞–π—Ç –ø–æ –±–æ—Ä—å–±–µ —Å –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–æ–º':
        update.message.reply_text('ü¶† —Å—Ç–æ–ø–∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å.—Ä—Ñ')
        return
    update.message.reply_text(country_handler(text))


def get_stats(country):
    if country == '–º–∏—Ä':
        url = 'https://www.worldometers.info/coronavirus/'
        style = 'font-size:13px; color:#999; margin-top:5px; text-align:center'
    else:
        url = f'https://www.worldometers.info/coronavirus/country/{country}'
        style = 'font-size:13px; color:#999; text-align:center'

    page = requests.get(url)

    soup = BeautifulSoup(page.text, 'html.parser')

    if '404 Not Found' in str(soup):
        return '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–µ'

    cases = soup.findAll('div', class_='maincounter-number')

    latest_update = soup.findAll('div', style=style)[0].text
    latest_update = ' '.join(translate(latest_update, lang='en-ru').split()[:-1]) + ' GMT'
    latest_update = latest_update.split(':')
    to_return = f'üü®–í—Å–µ–≥–æ –∑–∞–±–æ–ª–µ–ª–æ: {cases[0].text.strip()}\n\n' \
                f'üü•–£–º–µ—Ä–ª–æ: {cases[1].text.strip()}\n\n' \
                f'üü©–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {cases[2].text.strip()}\n\n' \
                f'{latest_update[0]}:\n' \
                f'{latest_update[1]}:{latest_update[2]}'

    return to_return


def country_handler(country):
    countries = {
        '–º–∏—Ä': '–º–∏—Ä',
        '—Å—à–∞': 'us',
        '–≤–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è': 'uk',
        '—Ä–æ—Å—Å–∏—è': 'russia',
        '–±–µ–ª–∞—Ä—É—Å—å': 'belarus',
        '—é–∂–Ω–∞—è –∫–æ—Ä–µ—è': 'south-korea',
        '–∏—Ç–∞–ª–∏—è': 'italy',
        '–∏—Å–ø–∞–Ω–∏—è': 'spain',
        '—á–µ—Ö–∏—è': 'czech-republic',
        '—É–∫—Ä–∞–∏–Ω–∞': 'ukraine',
        '–∫–∞–∑–∞—Ö—Å—Ç–∞–Ω': 'kazakhstan',
        '—Ç—É—Ä—Ü–∏—è': 'turkey',
        '–≥–µ—Ä–º–∞–Ω–∏—è': 'germany',
    }

    if country in countries.keys():
        stats = get_stats(countries[country])

        if country == '–º–∏—Ä':
            message = '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É\n\n'
        else:
            message = f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ {country.capitalize() if country != "—Å—à–∞" else country.upper()}\n\n'

        return message + stats

    country_url = translate(country)
    stats = get_stats(country_url)

    return f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ {country.capitalize()}\n\n' + stats


def translate(text, lang='ru-en'):
    yandex_translate_api = 'https://translate.yandex.net/api/v1.5/tr.json/translate'

    params = {
        'key': 'trnsl.1.1.20200330T161011Z.4777f8ad251f2aae.1e137893605996ff5aec1c7f39a813ca10b3bd3a',
        'lang': lang,
        'text': text
    }

    json_response = requests.get(yandex_translate_api, params=params).json()

    return json_response['text'][0].strip()


def get_top():
    # List of countries
    page = requests.get('https://news.google.com/covid19/map?hl=ru&gl=RU&ceid=RU:ru')
    soup = BeautifulSoup(page.text, 'html.parser')
    top = soup.findAll('th', class_='l3HOY')

    result = ['‚Ä¢' + country.text for country in top[1:11]]

    return 'üò∑ –¢–û–ü-10 —Å—Ç—Ä–∞–Ω üò∑\n\n' + '\n'.join(result)


def new_cases():
    page = requests.get('https://www.worldometers.info/coronavirus/country/russia/')

    soup = BeautifulSoup(page.text, 'html.parser')

    cases = soup.findAll('li', class_='news_li')[0].text.split()

    new_cases_ = '–ù–æ–≤—ã—Ö —Å–ª—É—á–∞–µ–≤: ' + cases[0] + '\n'
    new_deaths = '–°–º–µ—Ä—Ç–µ–π: ' + cases[4] + '\n'

    return new_cases_ + new_deaths


offers = ['–í–æ—Ç —Ñ–∏–ª—å–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–µ–Ω–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∂–¥—ã–π!\n'
          'https://www.ivi.ru/titr/goodmovies/30-must-see',
          '–ó–¥–µ—Å—å –º–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∫—É—Ä—Å–æ–≤: –∫–∞–∫ –ø–ª–∞—Ç–Ω—ã—Ö, —Ç–∞–∫ –∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö\n'
          'https://welcome.stepik.org',
          'Metropolitan Opera –∞–Ω–æ–Ω—Å–∏—Ä–æ–≤–∞–ª–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Å—Ç—Ä–∏–º—ã Live in HD.\n'
          '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–¥–µ—Å—å:\n'
          'https://www.metopera.org/user-information/nightly-met-opera-streams/',
          '–¢—É—Ä–∏–Ω—Å–∫–∏–π ¬´–Æ–≤–µ–Ω—Ç—É—Å¬ª –æ—Ç–∫—Ä—ã–ª –±–æ–ª–µ–ª—å—â–∏–∫–∞–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫–ª—É–±–Ω–æ–º—É —Ç–µ–ª–µ–≤–∏–¥–µ–Ω–∏—é.\n'
          'https://www.juventus.com/it/',
          '–ü—è—Ç–∏—á–∞—Å–æ–≤–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –≠—Ä–º–∏—Ç–∞–∂—É, —Å–Ω—è—Ç–æ–µ –Ω–∞ iPhone 11 Pro –æ–¥–Ω–∏–º –¥—É–±–ª–µ–º –≤ 4–ö\n'
          'https://www.youtube.com/watch?v=_MU73rsL9qE',
          '–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –æ–Ω–ª–∞–π–Ω-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ ¬´–£—á–∏.—Ä—É¬ª —Å 23 –º–∞—Ä—Ç–∞ –¥–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–æ–¥–∏—Ç—å'
          ' —É—Ä–æ–∫–∏ –≤–æ –≤—Ä–µ–º—è –∫–∞—Ä–∞–Ω—Ç–∏–Ω–∞ –ø–æ –≤–∏–¥–µ–æ—Å–≤—è–∑–∏.\n'
          'https://lp.uchi.ru/distant-uchi',
          '–ö—É—Ä—Å –ø–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º –¢–∏–Ω—å–∫–æ—Ñ—Ñ-–∂—É—Ä–Ω–∞–ª–∞.\n'
          'https://journal.tinkoff.ru/pro/invest/#/',
          '–ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ Boiler Room –∑–∞–ø—É—Å—Ç–∏—Ç –æ–Ω–ª–∞–π–Ω-–∫–∏–Ω–æ—Ñ–µ—Å—Ç–∏–≤–∞–ª—å The 4:3.'
          ' –° 16 –∞–ø—Ä–µ–ª—è –ø–æ 18 –º–∞—è –æ–Ω–∞ –ø–æ–∫–∞–∂–µ—Ç 13 —Ñ–∏–ª—å–º–æ–≤.'
          ]


def activity(context):
    if not context.chat_data['activity']:
        context.chat_data['activity'] = offers[:]
        shuffle(context.chat_data['activity'])
        action = context.chat_data['activity'][0]

        del context.chat_data['activity'][0]

        return action
    else:
        action = context.chat_data['activity'][0]

        del context.chat_data['activity'][0]

        return action


def main():
    updater = Updater('1273560851:AAHkGnpdZhJ4x0xyZXgS1NQXGAvGLepY0-I', use_context=True)
    dispatcher = updater.dispatcher
    # handlers
    dispatcher.add_handler(CommandHandler('start', start))
    dispatcher.add_handler(MessageHandler(Filters.text, message_hand))

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
